name: "Deploy to Server"

on:
  push:
      branches:
        - main

jobs:
  sonartest:
    name: Check all code with SonarQube
    runs-on: ubuntu-latest
    # container: sonarsource/sonar-scanner-cli:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install SonarScanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip -d $HOME
          echo "$HOME/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: Run SonarScanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=vcs \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN
  
  deploy:
    runs-on: ubuntu-latest
    env:
      SERVER_IP: ${{ vars.SERVER_IP }}

    steps:
      - uses: actions/checkout@v3

      - name: "Build Docker Image"
        run: |
          docker login -u yshakya -p $DOCKERHUB_PAT
          docker build -t yshakya/vcs .
          docker push yshakya/vcs
        env:
          DOCKERHUB_PAT: ${{ secrets.DOCKERHUB_PAT }}

      - name: "Configure SSH"
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          touch ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
      
      - name: "Put SSH Key in Docker file for Server Access"
        run: |
          touch mykey.pem
          echo $SSH_KEY64 | base64 -d > mykey.pem && chmod 400 mykey.pem
          ssh-keygen -R $SERVER_IP
        env: 
          SSH_KEY64: ${{ secrets.SSH_KEY64 }}

      - name: "Docker Pull and Restart Docker"
        run: |
          ssh -t ubuntu@$SERVER_IP -i mykey.pem 'docker pull yshakya/vcs'
          ssh -t ubuntu@$SERVER_IP -i mykey.pem 'docker stop mysite && docker rm mysite'
          ssh -t ubuntu@$SERVER_IP -i mykey.pem 'docker run --name mysite -p 80:80 -d yshakya/vcs'